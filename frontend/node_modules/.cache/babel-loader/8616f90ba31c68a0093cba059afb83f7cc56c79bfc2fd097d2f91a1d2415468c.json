{"ast":null,"code":"var _jsxFileName = \"C:\\\\Ajay\\\\MERN stack\\\\contact-list\\\\frontend\\\\src\\\\components\\\\Contact\\\\ReactTable.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useTable } from 'react-table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ReactTable() {\n  _s();\n  const data = React.useMemo(() => [{\n    col1: 'Hello',\n    col2: 'World'\n  }, {\n    col1: 'react-table',\n    col2: 'rocks'\n  }, {\n    col1: 'whatever',\n    col2: 'you want'\n  }], []);\n  const columns = React.useMemo(() => [{\n    Header: 'Name',\n    accessor: 'col1' // accessor is the \"key\" in the data\n  }, {\n    Header: 'Email',\n    accessor: 'col2'\n  }, {\n    Header: 'Phone',\n    accessor: 'col2'\n  }], []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      ...getTableProps(),\n      style: {\n        border: 'solid 1px blue'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n          ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n            ...column.getHeaderProps(),\n            style: {\n              borderBottom: 'solid 3px red',\n              background: 'aliceblue',\n              color: 'black',\n              fontWeight: 'bold'\n            },\n            children: column.render('Header')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        ...getTableBodyProps(),\n        children: rows.map(row => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            ...row.getRowProps(),\n            children: row.cells.map(cell => {\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                ...cell.getCellProps(),\n                style: {\n                  padding: '10px',\n                  border: 'solid 1px gray',\n                  background: 'papayawhip'\n                },\n                children: cell.render('Cell')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 41\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(ReactTable, \"sdXeWohil/0yE+phHpR6HeT6JLU=\", false, function () {\n  return [useTable];\n});\n_c = ReactTable;\nexport default ReactTable;\nvar _c;\n$RefreshReg$(_c, \"ReactTable\");","map":{"version":3,"names":["React","useTable","jsxDEV","_jsxDEV","Fragment","_Fragment","ReactTable","_s","data","useMemo","col1","col2","columns","Header","accessor","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","children","style","border","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","borderBottom","background","color","fontWeight","render","fileName","_jsxFileName","lineNumber","columnNumber","row","getRowProps","cells","cell","getCellProps","padding","_c","$RefreshReg$"],"sources":["C:/Ajay/MERN stack/contact-list/frontend/src/components/Contact/ReactTable.js"],"sourcesContent":["import React from 'react'\r\nimport { useTable } from 'react-table'\r\n\r\nfunction ReactTable() {\r\n    const data = React.useMemo(\r\n        () => [\r\n            {\r\n                col1: 'Hello',\r\n                col2: 'World',\r\n            },\r\n            {\r\n                col1: 'react-table',\r\n                col2: 'rocks',\r\n            },\r\n            {\r\n                col1: 'whatever',\r\n                col2: 'you want',\r\n            },\r\n        ],\r\n        []\r\n    )\r\n\r\n    const columns = React.useMemo(\r\n        () => [\r\n            {\r\n                Header: 'Name',\r\n                accessor: 'col1', // accessor is the \"key\" in the data\r\n            },\r\n            {\r\n                Header: 'Email',\r\n                accessor: 'col2',\r\n            },\r\n            {\r\n                Header: 'Phone',\r\n                accessor: 'col2',\r\n            },\r\n        ],\r\n        []\r\n    )\r\n\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n    } = useTable({ columns, data })\r\n\r\n\r\n    return (\r\n        <>\r\n            <table {...getTableProps()} style={{ border: 'solid 1px blue' }}>\r\n                <thead>\r\n                    {headerGroups.map(headerGroup => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {headerGroup.headers.map(column => (\r\n                                <th\r\n                                    {...column.getHeaderProps()}\r\n                                    style={{\r\n                                        borderBottom: 'solid 3px red',\r\n                                        background: 'aliceblue',\r\n                                        color: 'black',\r\n                                        fontWeight: 'bold',\r\n                                    }}\r\n                                >\r\n                                    {column.render('Header')}\r\n                                </th>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n                </thead>\r\n                <tbody {...getTableBodyProps()}>\r\n                    {rows.map(row => {\r\n                        prepareRow(row)\r\n                        return (\r\n                            <tr {...row.getRowProps()}>\r\n                                {row.cells.map(cell => {\r\n                                    return (\r\n                                        <td\r\n                                            {...cell.getCellProps()}\r\n                                            style={{\r\n                                                padding: '10px',\r\n                                                border: 'solid 1px gray',\r\n                                                background: 'papayawhip',\r\n                                            }}\r\n                                        >\r\n                                            {cell.render('Cell')}\r\n                                        </td>\r\n                                    )\r\n                                })}\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ReactTable"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}