{"ast":null,"code":"var _s = $RefreshSig$();\nimport React from 'react';\nimport { useTable } from 'react-table';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ReactTable() {\n  _s();\n  const data = React.useMemo(() => [{\n    col1: 'Hello',\n    col2: 'World'\n  }, {\n    col1: 'react-table',\n    col2: 'rocks'\n  }, {\n    col1: 'whatever',\n    col2: 'you want'\n  }], []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  });\n  const columns = React.useMemo(() => [{\n    Header: 'Column 1',\n    accessor: 'col1' // accessor is the \"key\" in the data\n  }, {\n    Header: 'Column 2',\n    accessor: 'col2'\n  }], []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(ReactTable, \"XbktUsmb+BtXL4jQ6kYQKgdLjWA=\", false, function () {\n  return [useTable];\n});\n_c = ReactTable;\nexport default ReactTable;\nvar _c;\n$RefreshReg$(_c, \"ReactTable\");","map":{"version":3,"names":["React","useTable","Fragment","_Fragment","jsxDEV","_jsxDEV","ReactTable","_s","data","useMemo","col1","col2","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","columns","Header","accessor","_c","$RefreshReg$"],"sources":["C:/Ajay/MERN stack/contact-list/frontend/src/components/Contact/ReactTable.js"],"sourcesContent":["import React from 'react'\r\nimport { useTable } from 'react-table'\r\n\r\nfunction ReactTable() {\r\n    const data = React.useMemo(\r\n        () => [\r\n            {\r\n                col1: 'Hello',\r\n                col2: 'World',\r\n            },\r\n            {\r\n                col1: 'react-table',\r\n                col2: 'rocks',\r\n            },\r\n            {\r\n                col1: 'whatever',\r\n                col2: 'you want',\r\n            },\r\n        ],\r\n        []\r\n    )\r\n\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n      } = useTable({ columns, data })   \r\n\r\n    const columns = React.useMemo(\r\n        () => [\r\n            {\r\n                Header: 'Column 1',\r\n                accessor: 'col1', // accessor is the \"key\" in the data\r\n            },\r\n            {\r\n                Header: 'Column 2',\r\n                accessor: 'col2',\r\n            },\r\n        ],\r\n        []\r\n    )\r\n\r\n\r\n    return (\r\n        <></>\r\n    )\r\n}\r\n\r\nexport default ReactTable"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,aAAa;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAMC,IAAI,GAAGR,KAAK,CAACS,OAAO,CACtB,MAAM,CACF;IACIC,IAAI,EAAE,OAAO;IACbC,IAAI,EAAE;EACV,CAAC,EACD;IACID,IAAI,EAAE,aAAa;IACnBC,IAAI,EAAE;EACV,CAAC,EACD;IACID,IAAI,EAAE,UAAU;IAChBC,IAAI,EAAE;EACV,CAAC,CACJ,EACD,EAAE,CACL;EAED,MAAM;IACFC,aAAa;IACbC,iBAAiB;IACjBC,YAAY;IACZC,IAAI;IACJC;EACF,CAAC,GAAGf,QAAQ,CAAC;IAAEgB,OAAO;IAAET;EAAK,CAAC,CAAC;EAEjC,MAAMS,OAAO,GAAGjB,KAAK,CAACS,OAAO,CACzB,MAAM,CACF;IACIS,MAAM,EAAE,UAAU;IAClBC,QAAQ,EAAE,MAAM,CAAE;EACtB,CAAC,EACD;IACID,MAAM,EAAE,UAAU;IAClBC,QAAQ,EAAE;EACd,CAAC,CACJ,EACD,EAAE,CACL;EAGD,oBACId,OAAA,CAAAF,SAAA,oBAAK;AAEb;AAACI,EAAA,CA7CQD,UAAU;EAAA,QAyBTL,QAAQ;AAAA;AAAAmB,EAAA,GAzBTd,UAAU;AA+CnB,eAAeA,UAAU;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}