{"ast":null,"code":"var _jsxFileName = \"C:\\\\Ajay\\\\MERN stack\\\\contact-list\\\\frontend\\\\src\\\\components\\\\Contact\\\\ReactTable.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useMemo } from 'react';\nimport { useTable, useGlobalFilter } from 'react-table';\nimport GlobalFilter from '../../components/Contact/GlobalFilter';\nimport CreateOutlinedIcon from '@mui/icons-material/CreateOutlined';\nimport DeleteOutlineOutlinedIcon from '@mui/icons-material/DeleteOutlineOutlined';\nimport axios from 'axios';\nimport backendUrl from '../../const';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ReactTable() {\n  _s();\n  const [contacts, setContacts] = useState([]);\n  // Using useMemo\n  const squaredNum = useMemo(() => {\n    return squareNum(number);\n  }, [number]);\n  useEffect(() => {\n    async function fetchData() {\n      await axios.get(`${backendUrl}/contacts`).then(resp => console.log(resp.data));\n    }\n    fetchData();\n  }, []);\n  const data = React.useMemo(() => [{\n    name: 'ajay',\n    email: 'avbbb@gmail.com',\n    phone: '0978657809',\n    actions: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CreateOutlinedIcon, {\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(DeleteOutlineOutlinedIcon, {\n        sx: {\n          color: 'red'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }], []);\n  const columns = React.useMemo(() => [{\n    Header: 'Name',\n    accessor: 'name'\n  }, {\n    Header: 'Email',\n    accessor: 'email'\n  }, {\n    Header: 'Phone',\n    accessor: 'phone'\n  }, {\n    Header: 'Actions',\n    accessor: 'actions'\n  }], []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    useFilters,\n    state,\n    setGlobalFilter\n  } = useTable({\n    columns,\n    data\n  }, useGlobalFilter);\n  const {\n    globalFilter\n  } = state;\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contact-list-outer-box\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"title\",\n              children: \"Contact List\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"search-box col-md-12 col-lg-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12\",\n              children: /*#__PURE__*/_jsxDEV(GlobalFilter, {\n                filter: globalFilter,\n                setFilter: setGlobalFilter\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-12 col-lg-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-12 col-lg-2\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"add-new\",\n              children: \"Add new contact\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12 p-2 table-responsive\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              ...getTableProps(),\n              className: \"table table-bordered\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  ...headerGroup.getHeaderGroupProps(),\n                  children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n                    ...column.getHeaderProps(),\n                    children: column.render('Header')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 49\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 41\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                ...getTableBodyProps(),\n                children: rows.map(row => {\n                  prepareRow(row);\n                  return /*#__PURE__*/_jsxDEV(\"tr\", {\n                    ...row.getRowProps(),\n                    children: row.cells.map(cell => {\n                      return /*#__PURE__*/_jsxDEV(\"td\", {\n                        ...cell.getCellProps(),\n                        children: cell.render('Cell')\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 109,\n                        columnNumber: 57\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 106,\n                    columnNumber: 45\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n_s(ReactTable, \"46An+6Vb6frRVKOUZJe1r7NsUks=\", false, function () {\n  return [useTable];\n});\n_c = ReactTable;\nexport default ReactTable;\nvar _c;\n$RefreshReg$(_c, \"ReactTable\");","map":{"version":3,"names":["React","useEffect","useState","useMemo","useTable","useGlobalFilter","GlobalFilter","CreateOutlinedIcon","DeleteOutlineOutlinedIcon","axios","backendUrl","jsxDEV","_jsxDEV","Fragment","_Fragment","ReactTable","_s","contacts","setContacts","squaredNum","squareNum","number","fetchData","get","then","resp","console","log","data","name","email","phone","actions","children","color","fileName","_jsxFileName","lineNumber","columnNumber","sx","columns","Header","accessor","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","useFilters","state","setGlobalFilter","globalFilter","className","filter","setFilter","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","_c","$RefreshReg$"],"sources":["C:/Ajay/MERN stack/contact-list/frontend/src/components/Contact/ReactTable.js"],"sourcesContent":["import React, { useEffect, useState, useMemo } from 'react'\r\nimport { useTable, useGlobalFilter } from 'react-table'\r\nimport GlobalFilter from '../../components/Contact/GlobalFilter'\r\nimport CreateOutlinedIcon from '@mui/icons-material/CreateOutlined';\r\nimport DeleteOutlineOutlinedIcon from '@mui/icons-material/DeleteOutlineOutlined';\r\nimport axios from 'axios'\r\nimport backendUrl from '../../const'\r\n\r\nfunction ReactTable() {\r\n    const [contacts, setContacts] = useState([])\r\n    // Using useMemo\r\n    const squaredNum = useMemo(() => {\r\n        return squareNum(number);\r\n    }, [number])\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            await axios.get(`${backendUrl}/contacts`)\r\n                .then(resp => console.log(resp.data))\r\n        }\r\n        fetchData()\r\n    }, [])\r\n    const data = React.useMemo(\r\n        () => [\r\n            {\r\n                name: 'ajay',\r\n                email: 'avbbb@gmail.com',\r\n                phone: '0978657809',\r\n                actions: <>\r\n                    <CreateOutlinedIcon color=\"primary\" />\r\n                    <DeleteOutlineOutlinedIcon sx={{ color: 'red' }} />\r\n                </>,\r\n            },\r\n        ],\r\n        []\r\n    )\r\n\r\n    const columns = React.useMemo(\r\n        () => [\r\n            {\r\n                Header: 'Name',\r\n                accessor: 'name',\r\n            },\r\n            {\r\n                Header: 'Email',\r\n                accessor: 'email',\r\n            },\r\n            {\r\n                Header: 'Phone',\r\n                accessor: 'phone',\r\n            },\r\n            {\r\n                Header: 'Actions',\r\n                accessor: 'actions',\r\n            },\r\n        ],\r\n        []\r\n    )\r\n\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        useFilters,\r\n        state,\r\n        setGlobalFilter,\r\n    } = useTable({ columns, data }, useGlobalFilter)\r\n\r\n    const { globalFilter } = state\r\n\r\n    return (\r\n        <section>\r\n            <div className=\"container\">\r\n                <div className=\"contact-list-outer-box\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <h3 className=\"title\">Contact List</h3>\r\n                        </div>\r\n                        <div className=\"search-box col-md-12 col-lg-4\">\r\n                            <div className=\"col-12\">\r\n                                <GlobalFilter filter={globalFilter} setFilter={setGlobalFilter} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-12 col-lg-6\"></div>\r\n                        <div className=\"col-md-12 col-lg-2\">\r\n                            <button className='add-new'>Add new contact</button>\r\n                        </div>\r\n                        <div className=\"col-12 p-2 table-responsive\">\r\n                            <table {...getTableProps()} className='table table-bordered'>\r\n                                <thead>\r\n                                    {headerGroups.map(headerGroup => (\r\n                                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                                            {headerGroup.headers.map(column => (\r\n                                                <th {...column.getHeaderProps()} >\r\n                                                    {column.render('Header')}\r\n                                                </th>\r\n                                            ))}\r\n                                        </tr>\r\n                                    ))}\r\n                                </thead>\r\n                                <tbody {...getTableBodyProps()}>\r\n                                    {rows.map(row => {\r\n                                        prepareRow(row)\r\n                                        return (\r\n                                            <tr {...row.getRowProps()}>\r\n                                                {row.cells.map(cell => {\r\n                                                    return (\r\n                                                        <td {...cell.getCellProps()} >\r\n                                                            {cell.render('Cell')}\r\n                                                        </td>\r\n                                                    )\r\n                                                })}\r\n                                            </tr>\r\n                                        )\r\n                                    })}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ReactTable"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}